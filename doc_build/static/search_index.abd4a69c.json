[{"id":0,"title":"笔记简介","content":"#\n\n本文主要记录的是后端语言一些基础知识学习的相关笔记，包括 NestJS 但不仅仅限于 NestJS\n\n主要学习内容是参考官方文档和网络视频资源\n\n内容比较基础、零碎，记录下来方便后续快速回顾，加深印象\n\n\nNestJS 文档#\n\n官方文档：https://docs.nestjs.com/\n\n中文文档：http://nestjs.inode.club/\n\n\n开发工具#\n\nIntelliJ IDEA 或者 WebStorm\n\n优点：\n\n * 开箱即用、无需配置\n * 代码提示支持好\n\n缺点：\n\n * 付费\n\n\n数据库#\n\nMySQL + Navicat\n\n\nAPI 测试工具#\n\nApifox 中文界面，使用简单，支持快速 Mock，相比 Postman 更容易上手","routePath":"/blog/dev/","lang":"","toc":[{"text":"NestJS 文档","id":"nestjs-文档","depth":2,"charIndex":105},{"text":"开发工具","id":"开发工具","depth":2,"charIndex":181},{"text":"数据库","id":"数据库","depth":2,"charIndex":258},{"text":"API 测试工具","id":"api-测试工具","depth":2,"charIndex":282}],"domain":"","frontmatter":{},"version":""},{"id":1,"title":"安装","content":"快速开始#\n\n\n安装#\n\n\n前提#\n\nNode.js（版本 >= 16）\n\n\n脚手架#\n\n\n\n\n创建项目#\n\n使用  Nest CLI  构建的项目会创建一个初始的项目结构,并安装 node modules 和其他一些样板文件，然后创建一个  src/ \n目录，并增加几个核心文件。\n\n\n\n\n启动项目#\n\n\n\n在浏览器中打开  http://localhost:3000/\n\n\n常用命令#","routePath":"/blog/dev/nest/","lang":"","toc":[{"text":"前提","id":"前提","depth":2,"charIndex":13},{"text":"脚手架","id":"脚手架","depth":2,"charIndex":38},{"text":"创建项目","id":"创建项目","depth":2,"charIndex":47},{"text":"启动项目","id":"启动项目","depth":2,"charIndex":145},{"text":"常用命令","id":"常用命令","depth":2,"charIndex":-1}],"domain":"","frontmatter":{},"version":""},{"id":3,"title":"博客简介","content":"#\n\n\n博客介绍#\n\n  博客记录的是在项目开发过程中所遇到的问题以及对应的解决方案。在完成工作之余，对这一阶段的技术难点和问题做分析和总结，以博客的形式做记录。\n\n  整理归档的前端笔记主要是为了在以后的项目开发过程中，遇到类似的问题或者技术难点时可以查阅之前的开发记录作参考，从而快速定位问题和解决问题。\n\n  博客笔记不定时更新中...博客笔记不定时更新中...","routePath":"/blog/note/0","lang":"","toc":[{"text":"博客介绍","id":"博客介绍","depth":2,"charIndex":3}],"domain":"","frontmatter":{},"version":""},{"id":4,"title":"App如何打开应用通知权限","content":"#\n\n\n#","routePath":"/blog/note/1","lang":"","toc":[{"text":"","id":"","depth":2,"charIndex":-1}],"domain":"","frontmatter":{},"version":""},{"id":5,"title":"内容待定","content":"#","routePath":"/blog/note/2","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":6,"title":"VSCode 编辑器设置","content":"#\n\nTIP\n\n前端开发的一些常用插件，提高工作效率。\n\n\n插件#\n\n\n基础#\n\n * Chinese (Simplified) (简体中文)\n\n\nGit 增强#\n\n * Git Graph：查看仓库的 Git Graph，并从图中轻松执行 Git 操作。\n * GitLens — Git supercharged：查看代码最近修改记录、修改人员\n * git-commit-plugin：自动生成git commit消息\n\n\n快速增效#\n\n * Turbo Console Log：快速console.log()\n\n * Code Spell Checker：单词拼写检查\n\n * Color Highlight：高亮代码中颜色\n\n * Image preview：预览代码中图片\n\n * Path Intellisense：代码路径提示\n\n * SVG：预览 SVG\n\n * IntelliJ IDEA Keybindings：IDEA 风格快捷键\n\n * Code Translate：鼠标悬浮显示翻译\n\n * Bookmarks：在代码中进行标记，通过标记快速跳转\n\n * GitHub Repositories：通过仓库地址浏览代码\n\n\n风格统一#\n\n * EditorConfig for VS Code：编辑器风格统一插件\n   \n   * 需在项目根目录配置.editorconfig\n\n * ESLint：代码风格检查工具\n   \n   * standard规则\n\n * Prettier - Code formatter：代码格式化工具，可根据项目配置文件进行格式化风格统一\n   \n   * 文档\n   \n   * 支持的文件类型\n   \n   * 优先依据项目配置文件进行格式化\n\n\n主题#\n\n * GitHub Theme：Github 风格主题；有暗色和亮色\n * vscode-icons：vscode 文件图标\n * Error Lens：提供行内报错提示\n\n\n其他#\n\n * Draw.io Integration：画图插件\n * Partial Diff：代码对比\n * Live Server：快速开启服务器\n * i18n Ally：国际化翻译插件，可提高行内翻译提示\n   * 文档\n * UnoCSS\n   * 文档\n   * 快速查阅属性\n\n\nVue#\n\n * Vue - Official\n\n * Vue 3 Snippets\n\n * Vue VSCode Snippets\n\n\nAI增强代码提示#\n\n * CodeGeeX：目前在用，免费功能够用\n\n * GitHub Copilot：Github出品\n\n * Tabnine：代码提示过短（没有深度使用）\n\n * TONGYI Lingma：阿里出品\n\n\n编辑器设置#\n\n\n在 VSCode 中开启嵌入式（内联）提示#\n\n在 vscode 设置中搜索inlayHint，开启对应需要提示的选项，即可开启内联提示\n\n> 灰色部分为内联提示效果\n\n","routePath":"/blog/tools/0","lang":"","toc":[{"text":"插件","id":"插件","depth":2,"charIndex":29},{"text":"基础","id":"基础","depth":3,"charIndex":35},{"text":"Git 增强","id":"git-增强","depth":3,"charIndex":73},{"text":"快速增效","id":"快速增效","depth":3,"charIndex":214},{"text":"风格统一","id":"风格统一","depth":3,"charIndex":524},{"text":"主题","id":"主题","depth":3,"charIndex":754},{"text":"其他","id":"其他","depth":3,"charIndex":847},{"text":"Vue","id":"vue","depth":3,"charIndex":995},{"text":"AI增强代码提示","id":"ai增强代码提示","depth":3,"charIndex":1064},{"text":"编辑器设置","id":"编辑器设置","depth":2,"charIndex":1179},{"text":"在 VSCode 中开启嵌入式（内联）提示","id":"在-vscode-中开启嵌入式内联提示","depth":3,"charIndex":1188}],"domain":"","frontmatter":{},"version":""},{"id":7,"title":"验证更新","content":"Window PowerShell 检查更新#\n\nTIP\n\nPowerShell 发布页：https://github.com/PowerShell/PowerShell/releases/tag/v7.4.2\n\n\n查看当前版本#\n\n使用 PowerShell 终端输入指令, 终端将显示您当前的 PowerShell 版本号。\n\n\n\n\n搜索最新版本#\n\nwinget 是 Windows 自带的包管理器\n\n\n\n这个会显示最新版本的正常办和预览版\n\n\n\n\n安装新版本#\n\n\n\n\n验证更新#\n\n直接打开 powershell 并且输入$PSVersionTable.PSVersion\n\n> 可能看到版本号并没有改变 原因：5.1 和 7 版本可以共存","routePath":"/blog/tools/1","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":8,"title":"Windows 工具集合","content":"#","routePath":"/blog/tools/2","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":9,"title":"JSON 导出 xlsx","content":"#\n\nTIP\n\n本案例只是一个 Demo，满足个人场景使用，经测试可以把 JSON 数据导出为 Excel 文件\n\n具体代码逻辑需要根据实际业务进行调整\n\n代码执行环境为 nodejs\n\n\n业务场景#\n\n将代码中配置好的 JSON 数据导出生成 Excel 类型的文件\n\n * 翻译多语言作为源文件提供\n\n\n安装#\n\n\n\n\n源数据#\n\n\n\n\n转换方法#\n\n\n\n\n使用#\n\n运行命令成功后，后生成zh.xlsx文件\n\n","routePath":"/blog/web/code/0","lang":"","toc":[{"text":"业务场景","id":"业务场景","depth":3,"charIndex":94},{"text":"安装","id":"安装","depth":3,"charIndex":153},{"text":"源数据","id":"源数据","depth":3,"charIndex":161},{"text":"转换方法","id":"转换方法","depth":3,"charIndex":170},{"text":"使用","id":"使用","depth":3,"charIndex":180}],"domain":"","frontmatter":{},"version":""},{"id":10,"title":"前端笔记","content":"#\n\n\n笔记简介#\n\n  主要记录前端学习的一些知识，方便后期回顾，加深印象。","routePath":"/blog/web/","lang":"","toc":[{"text":"笔记简介","id":"笔记简介","depth":2,"charIndex":3}],"domain":"","frontmatter":{},"version":""}]